// @generated by protobuf-ts 2.0.2 with parameter client_generic,optimize_code_size
// @generated from protobuf file "service-chat.proto" (package "spec", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message spec.JoinRequest
 */
export interface JoinRequest {
    /**
     * @generated from protobuf field: string username = 1;
     */
    username: string;
}
/**
 * @generated from protobuf message spec.ChatEvent
 */
export interface ChatEvent {
    /**
     * @generated from protobuf field: string username = 1;
     */
    username: string;
    /**
     * @generated from protobuf oneof: event
     */
    event: {
        kind: "joined";
        /**
         * @generated from protobuf field: string joined = 2;
         */
        value: string;
    } | {
        kind: "message";
        /**
         * @generated from protobuf field: string message = 3;
         */
        value: string;
    } | {
        kind: "left";
        /**
         * @generated from protobuf field: string left = 4;
         */
        value: string;
    } | {
        kind: undefined;
        value?: never;
    };
}
/**
 * @generated from protobuf message spec.PostRequest
 */
export interface PostRequest {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
}
/**
 * @generated from protobuf message spec.PostResponse
 */
export interface PostResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class JoinRequest$Type extends MessageType<JoinRequest> {
    constructor() {
        super("spec.JoinRequest", [
            { no: 1, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message spec.JoinRequest
 */
export const JoinRequest = new JoinRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChatEvent$Type extends MessageType<ChatEvent> {
    constructor() {
        super("spec.ChatEvent", [
            { no: 1, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "joined", kind: "scalar", oneof: "event", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "message", kind: "scalar", oneof: "event", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "left", kind: "scalar", oneof: "event", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message spec.ChatEvent
 */
export const ChatEvent = new ChatEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PostRequest$Type extends MessageType<PostRequest> {
    constructor() {
        super("spec.PostRequest", [
            { no: 1, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message spec.PostRequest
 */
export const PostRequest = new PostRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PostResponse$Type extends MessageType<PostResponse> {
    constructor() {
        super("spec.PostResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message spec.PostResponse
 */
export const PostResponse = new PostResponse$Type();
/**
 * @generated ServiceType for protobuf service spec.ChatService
 */
export const ChatService = new ServiceType("spec.ChatService", [
    { name: "Join", serverStreaming: true, options: {}, I: JoinRequest, O: ChatEvent },
    { name: "Post", options: {}, I: PostRequest, O: PostResponse }
]);
